---
kind: pipeline
type: docker
name: default
platform:
  os: linux
  arch: arm64

clone:
  disable: true

steps:
- name: Setup Cluster
  image: kameshsampath/kube-dev-tools:v0.0.8
  pull: if-not-exists
  environment:
    KUBECONFIG: /apps/.kube/config
  commands:
  - mkdir -p .kube
  - 'docker network create --opt "com.docker.network.driver.mtu=1450" \
   "$DOCKER_NETWORK_NAME" || true'
  - 'docker volume create local_registry || true'
  - |
    docker container run -d \
    --name my-registry.localhost \
    --network  $DOCKER_NETWORK_NAME \
    -v local_registry:/var/lib/registry \
    --restart always \
    -p 5001:5000 registry:2 || true
  - |
    envsubst < ./hack/k3s-cluster-config.yaml.tpl > ./hack/k3s-cluster-config.yaml
  - | 
    k3d cluster create \
      --config ./hack/k3s-cluster-config.yaml \
      --registry-use host.k3d.internal:5001 \
      --registry-config ./hack/registries.yaml
  volumes:
    - name: dockersock
      path: /var/run/docker.sock
    - name: kubeconfig
      path: /apps/.kube
- name: set kube config
  image: kameshsampath/kube-dev-tools:v0.0.8
  pull: if-not-exists
  commands:
    - k3d kubeconfig get $K3D_CLUSTER_NAME > /apps/.kube/config
    - sed -i 's|host.docker.internal|127.0.0.1|' /apps/.kube/config
  environment:
    K3D_CLUSTER_NAME: lingua-greeter
  volumes:
  - name: dockersock
    path: /var/run/docker.sock
  - name: kubeconfig
    path: /apps/.kube
volumes:
  - name: kubeconfig
    host:
     path: /Users/kameshs/git/harness-apps/drone-ci-101-examples/.kube
  - name: dockersock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
type: docker
name: delete-cluster
platform:
  os: linux
  arch: arm64
clone:
  disable: true
steps:
  - name: delete cluster
    image: kameshsampath/kube-dev-tools:v0.0.8
    pull: if-not-exists
    commands:
     - k3d kubeconfig get $K3D_CLUSTER_NAME > /apps/.kube/config
     - k3d cluster delete $K3D_CLUSTER_NAME
    volumes:
    - name: dockersock
      path: /var/run/docker.sock
volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock